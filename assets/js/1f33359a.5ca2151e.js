"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[411],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>u});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),c=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},p=function(t){var e=c(t.components);return n.createElement(d.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),s=c(a),u=r,k=s["".concat(d,".").concat(u)]||s[u]||m[u]||l;return a?n.createElement(k,o(o({ref:e},p),{},{components:a})):n.createElement(k,o({ref:e},p))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,o=new Array(l);o[0]=s;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},9679:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const l={description:"Modules and Dependencies",sidebar_position:3},o="Modules",i={unversionedId:"gettingstarted/modules",id:"gettingstarted/modules",title:"Modules",description:"Modules and Dependencies",source:"@site/docs/gettingstarted/modules.md",sourceDirName:"gettingstarted",slug:"/gettingstarted/modules",permalink:"/docs/gettingstarted/modules",draft:!1,editUrl:"https://github.com/bloxbean/cardano-client/tree/main/docs/docs/gettingstarted/modules.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Modules and Dependencies",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Dependencies",permalink:"/docs/gettingstarted/dependencies"},next:{title:"Account & Backend Provider Setup",permalink:"/docs/gettingstarted/account-setup"}},d={},c=[],p={toc:c};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"modules"},"Modules"),(0,r.kt)("p",null,"In 0.4.0 and later, the library has been divided into smaller modules. These modules can be added to a project based on requirement."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Group Id:")," com.bloxbean.cardano"),(0,r.kt)("p",null,"For ",(0,r.kt)("strong",{parentName:"p"},"simple")," setup, you can use ",(0,r.kt)("strong",{parentName:"p"},"cardano-client-lib")," and one of the backend provider as dependency."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Modules"),(0,r.kt)("th",{parentName:"tr",align:null},"Artifact Id"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/"},"cardano-client-lib")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-lib"),(0,r.kt)("td",{parentName:"tr",align:null},"This is a top level module which includes all other modules except backend provider modules.",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"(Recommended for most application)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/backend"},"Backend Api")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-backend"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines backend apis which are implemented by provider specific module.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/backend-modules/blockfrost"},"Blockfrost Backend")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-backend-blockfrost"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides integration with ",(0,r.kt)("a",{parentName:"td",href:"https://blockfrost.io/"},"Blockfrost"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/backend-modules/koios"},"Koios Backend")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-backend-koios"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides integration with ",(0,r.kt)("a",{parentName:"td",href:"https://www.koios.rest/"},"Koios"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/backend-modules/ogmios"},"Ogmios/Kupo Backend")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-backend-ogmios"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides integration with ",(0,r.kt)("a",{parentName:"td",href:"https://ogmios.dev/"},"Ogmios")," and ",(0,r.kt)("a",{parentName:"td",href:"https://cardanosolutions.github.io/kupo/"},"Kupo"),". ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Supported Apis :")," submitTransaction, evaluateTx, Kupo support (UtxoService)")))),(0,r.kt)("p",null,"For fine-grained dependency management, add one or more below modules as required."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Modules"),(0,r.kt)("th",{parentName:"tr",align:null},"Artifact Id"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/common"},"common")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-common"),(0,r.kt)("td",{parentName:"tr",align:null},"Contains common utilities (HexUtil, JsonUtil, Cbor Utils etc). This module doesn't depend on any other module. ",(0,r.kt)("br",null),"  ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/crypto"},"crypto")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-crypto"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides implementation for standards like Bip32, Bip39, CIP1852 and other crypto primitives ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," common")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/address"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-address"),(0,r.kt)("td",{parentName:"tr",align:null},"Supports derivation of various types of Cardano addresses (Base, Enterprise, Pointer, Stake etc) ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," common, crypto, transaction-common")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/metadata"},"metadata")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides simple api to generate and serialize generic metadata ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," common, crypto")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/transaction-common"},"transaction-common")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-transaction-common"),(0,r.kt)("td",{parentName:"tr",align:null},"A small module with some transaction specific common classes which are required in other modules. ",(0,r.kt)("br",null)," This module is there for backward compatibility. So you should not add this module directly in your application. ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," common, crypto")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/core"},"core")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-core"),(0,r.kt)("td",{parentName:"tr",align:null},"Contains low level transaction serialization logic and other common apis / interfaces (Account, Coin selections, UtxoSupplier, ProtocolParamSupplier etc.). ",(0,r.kt)("br",null)," Also contains high-level api like PaymentTransaction for backward compatibility. But HL api may be removed to a separate module in future release",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," common, crypto, transaction-common, address, metadata")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/function"},"function")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-function"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides Composable Function Apis. A simple, flexible way to build transactions through re-usable functions. ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," core")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/cip"},"cip")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-cip"),(0,r.kt)("td",{parentName:"tr",align:null},"A umbrella module which provides a simple way to get available cip implementations (cip25, cip8 etc.) ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," cip8, cip20, cip25, cip27, cip30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/cip/cip8"},"cip8")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-cip8"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://cips.cardano.org/cips/cip8/"},"CIP 8 - Message Signing")," ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," common, crypto")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/cip/cip20"},"cip20")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-cip20"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://cips.cardano.org/cips/cip20/"},"CIP 20 - Transaction message/comment metadata")," ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," metadata")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/cip/cip25"},"cip25")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-cip25"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://cips.cardano.org/cips/cip25/"},"CIP 25 - Media NFT Metadata Standard")," ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," metadata")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/cip/cip27"},"cip27")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-cip27"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://cips.cardano.org/cips/cip27/"},"CIP 27 - CNFT Community Royalties Standard")," ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," cip25")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bloxbean/cardano-client-lib/tree/master/cip/cip30"},"cip30")),(0,r.kt)("td",{parentName:"tr",align:null},"cardano-client-cip30"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://cips.cardano.org/cips/cip30/"},"CIP 30 - Cardano dApp-Wallet Web Bridge")," ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"Dependencies:")," cip8, core")))))}m.isMDXComponent=!0}}]);