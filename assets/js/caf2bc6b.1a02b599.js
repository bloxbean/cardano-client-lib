"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[968],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(a),m=i,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return a?n.createElement(g,o(o({ref:t},s),{},{components:a})):n.createElement(g,o({ref:t},s))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3490:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const r={description:"Aiken Integration Apis",sidebar_label:"Aiken Integration",sidebar_position:1},o="Overview",c={unversionedId:"integrations/aiken-integration-api",id:"integrations/aiken-integration-api",title:"Overview",description:"Aiken Integration Apis",source:"@site/docs/integrations/aiken-integration-api.md",sourceDirName:"integrations",slug:"/integrations/aiken-integration-api",permalink:"/docs/integrations/aiken-integration-api",draft:!1,editUrl:"https://github.com/bloxbean/cardano-client/tree/main/docs/docs/integrations/aiken-integration-api.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{description:"Aiken Integration Apis",sidebar_label:"Aiken Integration",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Integrations",permalink:"/docs/category/integrations"},next:{title:"Scalus Integration",permalink:"/docs/integrations/scalus-integration-api"}},l={},p=[{value:"Dependencies",id:"dependencies",level:2},{value:"Maven (<code>pom.xml</code>)",id:"maven-pomxml",level:3},{value:"Gradle (<code>build.gradle</code>)",id:"gradle-buildgradle",level:3},{value:"Script Cost Evaluation",id:"script-cost-evaluation",level:2},{value:"Example Usage",id:"example-usage",level:3},{value:"Compile Parameterized Contract",id:"compile-parameterized-contract",level:2},{value:"Example Usage",id:"example-usage-1",level:3}],s={toc:p};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bloxbean/aiken-java-binding"},"Aiken Java Binding"),' provides many useful functionalities, such as "off-chain" script cost evaluation and compiling parameterized contracts. Aiken Java Binding offers a JNI wrapper around the Aiken library, making it easier to integrate with Java-based applications.'),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"To use Aiken Java Binding in your project, include the following dependency in your build configuration."),(0,i.kt)("h3",{id:"maven-pomxml"},"Maven (",(0,i.kt)("inlineCode",{parentName:"h3"},"pom.xml"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.bloxbean.cardano</groupId>\n    <artifactId>aiken-java-binding</artifactId>\n    <version>0.0.8</version>\n</dependency>\n")),(0,i.kt)("h3",{id:"gradle-buildgradle"},"Gradle (",(0,i.kt)("inlineCode",{parentName:"h3"},"build.gradle"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-groovy"},"implementation 'com.bloxbean.cardano:aiken-java-binding:${version}'\n")),(0,i.kt)("h2",{id:"script-cost-evaluation"},"Script Cost Evaluation"),(0,i.kt)("p",null,"Aiken Java Binding provides an implementation of the ",(0,i.kt)("inlineCode",{parentName:"p"},"TransactionEvaluator")," interface, known as ",(0,i.kt)("inlineCode",{parentName:"p"},"AikenTransactionEvaluator"),", which is used to evaluate the cost of a script. Since it implements the CCL's ",(0,i.kt)("inlineCode",{parentName:"p"},"TransactionEvaluator")," interface, you can use it directly with the QuickTx builder."),(0,i.kt)("h3",{id:"example-usage"},"Example Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"Result<String> result1 = quickTxBuilder.compose(scriptTx)\n                .feePayer(address)\n                .withSigner(SignerProviders.signerFrom(account))\n                .withTxEvaluator(new AikenTransactionEvaluator(utxoSupplier, protocolParamsSupplier))\n                .completeAndWait(System.out::println);\n")),(0,i.kt)("h2",{id:"compile-parameterized-contract"},"Compile Parameterized Contract"),(0,i.kt)("p",null,"Aiken Java Binding includes a utility class, ",(0,i.kt)("inlineCode",{parentName:"p"},"AikenScriptUtil"),", which can be used to compile a parameterized script. The parameters needed for the script are passed as a ",(0,i.kt)("inlineCode",{parentName:"p"},"ListPlutusData")," object."),(0,i.kt)("p",null,"The final compiled code can then be converted into a ",(0,i.kt)("inlineCode",{parentName:"p"},"PlutusScript")," object using the ",(0,i.kt)("inlineCode",{parentName:"p"},"PlutusBlueprintUtil.getPlutusScriptFromCompiledCode")," method."),(0,i.kt)("h3",{id:"example-usage-1"},"Example Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'PlutusData outputRef = ConstrPlutusData.of(0,\n                BytesPlutusData.of(HexUtil.decodeHexString("1f3f766bc864c3f8ce8ccc20716e3f3cf65f08a819073c75875ea4e67549947f")),\n                BigIntPlutusData.of(0));\nListPlutusData params = ListPlutusData.of(BytesPlutusData.of("MyToken"), outputRef);\n\nString contractCompiledCode = "590221010000323232323232323232323223222232533300b32323232533300f3370e9000180700089919191919191919191919299980e98100010991919299980e99b87480000044c94ccc078cdc3a4000603a002264a66603e66e1c011200213371e00a0322940c07000458c8cc004004030894ccc088004530103d87a80001323253330213375e6603a603e004900000d099ba548000cc0940092f5c0266008008002604c00460480022a66603a66e1c009200113371e00602e2940c06c050dd6980e8011bae301b00116301e001323232533301b3370e90010008a5eb7bdb1804c8dd59810800980c801180c800991980080080111299980f0008a6103d87a8000132323232533301f3371e01e004266e95200033023374c00297ae0133006006003375660400066eb8c078008c088008c080004c8cc004004008894ccc07400452f5bded8c0264646464a66603c66e3d221000021003133022337606ea4008dd3000998030030019bab301f003375c603a0046042004603e0026eacc070004c070004c06c004c068004c064008dd6180b80098078029bae3015001300d001163013001301300230110013009002149858c94ccc02ccdc3a40000022a66601c60120062930b0a99980599b874800800454ccc038c02400c52616163009002375c0026600200290001111199980399b8700100300c233330050053370000890011807000801001118029baa001230033754002ae6955ceaab9e5573eae815d0aba201";\nString applyParamCompiledCode = AikenScriptUtil.applyParamToScript(params, contractCompiledCode);\n\n// Convert Aiken compiled code to PlutusScript\nPlutusScript plutusScript = PlutusBlueprintUtil.getPlutusScriptFromCompiledCode(applyParamCompiledCode, PlutusVersion.v2);\n')))}d.isMDXComponent=!0}}]);