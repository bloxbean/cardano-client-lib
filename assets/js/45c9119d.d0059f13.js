"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[164],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(n),k=o,m=u["".concat(s,".").concat(k)]||u[k]||l[k]||a;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var d=2;d<a;d++)c[d]=n[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={description:"Account & Backend Provider Setup",sidebar_label:"Account & Backend Provider Setup",sidebar_position:3},c="Account & Backend Provider Setup",i={unversionedId:"gettingstarted/account-setup",id:"gettingstarted/account-setup",title:"Account & Backend Provider Setup",description:"Account & Backend Provider Setup",source:"@site/docs/gettingstarted/account-setup.md",sourceDirName:"gettingstarted",slug:"/gettingstarted/account-setup",permalink:"/docs/gettingstarted/account-setup",draft:!1,editUrl:"https://github.com/bloxbean/cardano-client/tree/main/docs/docs/gettingstarted/account-setup.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Account & Backend Provider Setup",sidebar_label:"Account & Backend Provider Setup",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Dependencies",permalink:"/docs/gettingstarted/dependencies"},next:{title:"Simple Ada Transfer",permalink:"/docs/gettingstarted/simple-transfer"}},s={},d=[{value:"Select a Network and Provider",id:"select-a-network-and-provider",level:2},{value:"Create Accounts",id:"create-accounts",level:2},{value:"Topup account with test Ada",id:"topup-account-with-test-ada",level:2},{value:"Create Backend Service",id:"create-backend-service",level:2}],p={toc:d};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"account--backend-provider-setup"},"Account & Backend Provider Setup"),(0,o.kt)("h2",{id:"select-a-network-and-provider"},"Select a Network and Provider"),(0,o.kt)("p",null,"First we need to select a network for our transaction. You can choose one of the available public test network."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Prepod")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Preview"))),(0,o.kt)("p",null,"Similarly, choose a backend provider to interact with Cardano blockchain. You can select either Koios or Blockfrost as\nbackend provider."),(0,o.kt)("p",null,"Please check ",(0,o.kt)("a",{parentName:"p",href:"/docs/gettingstarted/dependencies"},"dependencies")," page to find the required dependency for your selected backend provider."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For ",(0,o.kt)("strong",{parentName:"p"},"Blockfrost")," as backend provider, you need to first create an account on ",(0,o.kt)("a",{parentName:"p",href:"https://blockfrost.io"},"blockfrost.io")," and get\na ",(0,o.kt)("inlineCode",{parentName:"p"},"Project Id")," for the selected network."),(0,o.kt)("p",{parentName:"admonition"},"For ",(0,o.kt)("strong",{parentName:"p"},"Koios")," backend provider, you don't need any registration.")),(0,o.kt)("h2",{id:"create-accounts"},"Create Accounts"),(0,o.kt)("p",null,"The following code snippet shows how to create a new testnet account."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Account account = new Account(Networks.testnet()); \nString baseAddress = account.baseAddress();\nString mnemonic = account.mnemonic();\n")),(0,o.kt)("p",null,"If you already have mnemonic for an existing account, you can create the account from mnemonic. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'String mnemonic = "<24 words mnemonic>";\nAccount account = new Account(Networks.testnet(), mnemonic);\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Two types of address can be generated, mainnet address or testnet address."),(0,o.kt)("p",{parentName:"admonition"},"To generate a test network address, you can use any of the network constant ",(0,o.kt)("inlineCode",{parentName:"p"},"Networks.testnet()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Networks.prepod()")," or\n",(0,o.kt)("inlineCode",{parentName:"p"},"Networks.preview()"),". The generated testnet address can be used on any of the test network.\n",(0,o.kt)("strong",{parentName:"p"},"(The address generation depends on the NetworkId in Network object not protocol magic. These public test networks have same network id (0))")),(0,o.kt)("p",{parentName:"admonition"},"For mainnet address, you need to use ",(0,o.kt)("inlineCode",{parentName:"p"},"Networks.mainnet()"))),(0,o.kt)("h2",{id:"topup-account-with-test-ada"},"Topup account with test Ada"),(0,o.kt)("p",null,"Based on your selected network, get some test Ada from one of the below faucet. You need to provide an ",(0,o.kt)("inlineCode",{parentName:"p"},"address"),"\ngenerated in the previous section to get some test Ada."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.cardano.org/cardano-testnet/tools/faucet"},"https://docs.cardano.org/cardano-testnet/tools/faucet")),(0,o.kt)("h2",{id:"create-backend-service"},"Create Backend Service"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For Blockfrost :")),(0,o.kt)("p",null,"Use the correct Blockfrost url for the selected network and project id to create an instance of BackendService."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'String bfProjectId = "prepod...";\nBackendService backendService =\n        new BFBackendService(Constants.BLOCKFROST_PREPOD_URL, bfProjectId);\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," You can find Blockfrost urls for the supported networks in ",(0,o.kt)("inlineCode",{parentName:"p"},"com.bloxbean.cardano.client.backend.blockfrost.common.Constants"),"."),(0,o.kt)("p",null,"or,"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For Koios :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"BackendService backendService = new KoiosBackendService(KOIOS_TESTNET_URL);\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," You can find other Koios urls in ",(0,o.kt)("inlineCode",{parentName:"p"},"com.bloxbean.cardano.client.backend.koios.Constants")))}l.isMDXComponent=!0}}]);